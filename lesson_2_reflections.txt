1. What happens when you initialize a repository? Why do you need to do it?

When you initialize a repository, it creates a ".git" file in your folder. This file is hidden. You need to do this to be able to track your file history.

2. How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area differs from the working directory and the repository in that it is a middle ground between the two. The staging area is useful for preparing to commit files to your repository.

3. How can you use the staging area to make sure you have one commit per logical change?

I can use git diff --staged to see the differences between the staging area and the latest commit to ensure that there is one commit per logical change.

4. What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches would be helpful when you want to take a different direction to your code but want to keep the old version just in case you might need it later. It is easy to switch between branches, so using them can help keep your history clean.

5. How do the diagrams help you visualize the branch structure?

The diagrams give a visual representation of the branch structure, so it is easy to follow along the arrows to see which commits will be reached through a "git log" call.